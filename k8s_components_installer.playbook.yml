- name: Install some common packages to all hosts
  hosts: all
  tasks:
    - name: Install list of common packages
      become: true
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      with_items:
        - curl
        - ca-certificates
        - gnupg
        - apt-transport-https
        - python3
        - python3-pip
        - netcat # Tool to check ports
        - htop

- name: Install Master loadbalancer
  hosts: master_lbs
  handlers:
    - name: Reload haproxy
      become: true
      ansible.builtin.service:
        name: haproxy
        state: reloaded
    - name: Restart rsyslog
      become: true
      ansible.builtin.service:
        name: rsyslog
        state: restarted

  tasks:
    - name: Install rsyslog
      become: true
      ansible.builtin.apt:
        name: rsyslog
        state: present
        update_cache: true

    - name: Install haproxy
      become: true
      ansible.builtin.apt:
        name: haproxy
        state: present
        update_cache: true

    # The default behaviour of haproxy will create a default haproxy configuration for rsyslog after installing haproxy
    # That's why we must upload rsyslog configuration for haproxy after installing haproxy
    - name: Detect Haproxy rsyslog configuration path
      block:
        - name: Check current Haproxy rsyslog configuration file
          ansible.builtin.shell:
            cmd: ls /etc/rsyslog.d | grep -P '\d+-haproxy'
          register: detect_rsyslog_haproxy_config_file
          ignore_errors: true
          changed_when: false
        - name: Set fact - Haproxy rsyslog configuration file
          ansible.builtin.set_fact:
            rsyslog_haproxy_config_file: "{{
                detect_rsyslog_haproxy_config_file.stdout_lines[0]
                if detect_rsyslog_haproxy_config_file.stdout_lines
                else 'haproxy.conf'
              }}"

    - name: Upload haproxy.rsyslog.conf
      become: true
      ansible.builtin.template:
        dest: "/etc/rsyslog.d/{{ rsyslog_haproxy_config_file }}"
        src: haproxy.rsyslog.conf
        mode: a+r
      when: rsyslog_haproxy_config_file is defined
      notify:
        - Restart rsyslog

    - name: Install keepalived
      become: true
      ansible.builtin.apt:
        name: keepalived
        state: present
        update_cache: true

    - name: Install psmisc
      become: true
      ansible.builtin.apt:
        name: psmisc
        state: present
        update_cache: true

    - name: Start rsyslog
      become: true
      ansible.builtin.service:
        name: rsyslog
        state: started
        enabled: true

    - name: Start haproxy
      become: true
      ansible.builtin.service:
        name: haproxy
        state: started
        enabled: true

    - name: Upload haproxy.cfg
      become: true
      ansible.builtin.template:
        dest: /etc/haproxy/haproxy.cfg
        src: master.haproxy.cfg
        mode: a+r
      notify:
        - Reload haproxy

- name: Install components on masters and workers
  hosts: masters, workers
  handlers:
    - name: Restart containerd
      become: true
      ansible.builtin.service:
        name: containerd
        state: restarted
    - name: Restart kubelet
      become: true
      ansible.builtin.service:
        name: kubelet
        state: restarted
    - name: Apply sysctl settings
      become: true
      ansible.builtin.command: sysctl --system
      register: sysctl_output # <- Registers the command output.
      changed_when: sysctl_output.rc != 0 # <- Uses the return code to define when the task has changed.
  tasks:
    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
    - name: Creates /etc/apt/keyrings directory
      become: true
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: u+r

    - name: Add google apt key
      become: true
      ansible.builtin.get_url:
        url: "https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key"
        # Use extension .asc to trick "gpg --dearmor"
        dest: /etc/apt/keyrings/kubernetes-v1.27-apt-keyring.asc
        mode: a+r
        force: true

    - name: Add K8s Source
      become: true
      ansible.builtin.apt_repository:
        # The repo "https://apt.kubernetes.io/ kubernetes-xenial main" always provide the latest version
        # Use the repo "https://pkgs.k8s.io/core:/stable:/v1.27/deb/ /" instead
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-v1.27-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.27/deb/ /
        state: present
        filename: kubernetes

    - name: Apt install
      become: true
      ansible.builtin.apt:
        name: "{{ item.name }}={{ item.version }}"
        state: present
        update_cache: true
        allow_change_held_packages: true
        allow_downgrade: false
      loop:
        - { name: 'kubelet', version: '1.27.4*' }
        - { name: 'kubeadm', version: '1.27.4*' }

    - name: Hold
      become: true
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm

    - name: Add Dockerâ€™s official GPG key
      become: true
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/debian/gpg"
        dest: /etc/apt/trusted.gpg.d/debian_docker.asc
        mode: a+r
        force: true

    - name: Add docker Source
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/debian_docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install containerd.io
      become: true
      ansible.builtin.apt:
        name: containerd.io=1.6.*
        state: present
        update_cache: true
      notify:
        - Restart kubelet

    # It's just a workaround to let kubeadm works
    # - name: Remove /etc/containerd/config.toml
    #   ansible.builtin.file:
    #     state: absent
    #     path: /etc/containerd/config.toml
    #   notify:
    #     - Restart containerd
    - name: Upload /etc/containerd/config.toml
      become: true
      ansible.builtin.template:
        dest: /etc/containerd/config.toml
        src: etc.containerd.config.toml
        mode: a+r
      notify:
        - Restart containerd
    # - name: Generate default containerd configuration
    #   shell: containerd config default > /etc/containerd/config.toml
    #   notify:
    #     - Restart containerd

    - name: Add overlay, br_netfilter module to kernel
      become: true
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Get stat of /etc/sysctl.d/99-kubernetes-cri.conf
      ansible.builtin.stat:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
      register: create_kubernetes_cri_conf_status

    - name: Touch /etc/sysctl.d/99-kubernetes-cri.conf
      become: true
      ansible.builtin.file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"
        mode: a+r
      when: not create_kubernetes_cri_conf_status.stat.exists

    - name: Enable some configurations for containerd
      become: true
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        reload: true
      loop:
        - { key: 'net.ipv4.ip_forward', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        # Apply Dual-stack support
        - { key: 'net.ipv6.conf.all.forwarding', value: '1' }
      notify:
        - Apply sysctl settings
        - Restart containerd

    - name: Disable swap
      become: true
      ansible.builtin.shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      register: my_output # <- Registers the command output.
      changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

    - name: Add conf for containerd
      become: true
      ansible.builtin.blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter
        create: true
        mode: u+r
      notify:
        - Restart containerd

- name: Install some components on masters
  hosts: masters
  tasks:
    # This one is required for ansible module kubernetes.core.k8s
    - name: Install kubernetes python package on version >=12.0.0
      ansible.builtin.pip:
        name: kubernetes>=12.0.0

    - name: Install helm
      become: true
      ansible.builtin.unarchive:
        src: https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
        dest: /usr/local/bin
        extra_opts: "--strip-components=1"
        owner: root
        group: root
        mode: '0755'
        remote_src: true
      args:
        creates: /usr/local/bin/helm

    - name: Apt install kubectl
      become: true
      ansible.builtin.apt:
        name: "{{ item.name }}={{ item.version }}"
        state: present
        update_cache: true
        allow_change_held_packages: true
        allow_downgrade: false
      loop:
        - { name: 'kubectl', version: '1.27.4*' }

    - name: Hold
      become: true
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubectl
